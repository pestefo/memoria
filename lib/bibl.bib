
@inproceedings{Vang09a,
 author = {Vangala, Vipindeep and Czerwonka, Jacek and Talluri, Phani},
 title = {Test case comparison and clustering using program profiles and static execution},
 booktitle = {Proceedings of the the 7th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering},
 series = {ESEC/FSE '09},
 year = {2009},
 isbn = {978-1-60558-001-2},
 location = {Amsterdam, The Netherlands},
 pages = {293--294},
 numpages = {2},
 url = {http://doi.acm.org/10.1145/1595696.1595748},
 doi = {10.1145/1595696.1595748},
 acmid = {1595748},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {machine learning, static analysis, sustained engineering, testing}
}

@INPROCEEDINGS{Este12a, 
author={Estefo, Pablo}, 
booktitle={Software Engineering (ICSE), 2012 34th International Conference on}, title={Restructuring unit tests with TestSurgeon}, 
year={2012}, 
pages={1632-1634}, 
keywords={data visualisation;program testing;software maintenance;TestSurgeon;software engineering community;software maintainability;test execution;unit test modular;unit test restructuring;visualization;Communities;Educational institutions;Measurement;Shape;Software;Software engineering;Visualization}, 
doi={10.1109/ICSE.2012.6227219}, 
ISSN={0270-5257}
}

@inproceedings{Grei12a,
 author = {Greiler, Michaela and van Deursen, Arie and Zaidman, Andy},
 title = {Measuring test case similarity to support test suite understanding},
 booktitle = {Proceedings of the 50th international conference on Objects, Models, Components, Patterns},
 series = {TOOLS'12},
 year = {2012},
 isbn = {978-3-642-30560-3},
 location = {Prague, Czech Republic},
 pages = {91--107},
 numpages = {17},
 url = {http://dx.doi.org/10.1007/978-3-642-30561-0_8},
 doi = {10.1007/978-3-642-30561-0_8},
 acmid = {2366996},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg}
}
@inproceedings{greiler2012test,
  title={Test confessions: a study of testing practices for plug-in systems},
  author={Greiler, Michaela and van Deursen, Arie and Storey, M},
  booktitle={Software Engineering (ICSE), 2012 34th International Conference on},
  pages={244--254},
  year={2012},
  organization={IEEE}
}

@inproceedings{Kuhn08a,
  Abstract     = {To quickly localize defects, we want our attention
                  to be focussed on relevant failing tests. We propose
                  to improve defect localization by exploiting
                  dependencies between tests, using a JUnit extension
                  called JExample. In a case study, a monolithic
                  white-box test suite for a complex algorithm is
                  refactored into two traditional JUnit style tests
                  and to JExample. Of the three refactorings, JExample
                  reports five times fewer defect locations and
                  slightly better performance (-8-12\%), while having
                  similar maintenance characteristics. Compared to the
                  original implementation, JExample greatly improves
                  maintainability due the improved factorization
                  following the accepted test quality guidelines. As
                  such, JExample combines the benefits of test chains
                  with test quality aspects of JUnit style testing.},
  Annote       = {internationalconference},
  Author       = {Adrian Kuhn and Bart Van Rompaey and Lea
                  H\"ansenberger and Oscar Nierstrasz and Serge
                  Demeyer and Markus Gaelli and Koenraad Van Leemput},
  Booktitle    = {Extreme Programming and Agile Processes in Software
                  Engineering, 9th International Conference, XP 2008},
  Doi	       = {10.1007/978-3-540-68255-4_8},
  Editor       = {P. Abrahamsson},
  Isbn	       = {978-3-540-68254-7},
  Keywords     = {scg08 scg-pub snf08 jb08 JExample akuhn gaelli
                  haensenberger},
  Medium       = {2},
  Pages	       = {73--82},
  Peerreview   = {yes},
  Publisher    = {Springer},
  Series       = {Lecture Notes in Computer Science},
  Title	       = {{JExample}: Exploiting Dependencies Between Tests to
                  Improve Defect Localization},
  Url	       = {http://scg.unibe.ch/archive/papers/Kuhn08aJExample.pdf},
  Year	       = {2008},
  Bdsk-Url-1   = {http://scg.unibe.ch/archive/papers/Kuhn08aJExample.pdf},
  Bdsk-Url-2   = {http://dx.doi.org/10.1007/978-3-540-68255-4_8}
}

@inproceedings{Lien08a,
  Abstract     = {Writing unit tests for legacy systems is a key
                  maintenance task. When writing tests for
                  object-oriented programs, objects need to be set up
                  and the expected effects of executing the unit under
                  test need to be verified. If developers lack
                  internal knowledge of a system, the task of writing
                  tests is non-trivial. To address this problem, we
                  propose an approach that exposes side effects
                  detected in example runs of the system and uses
                  these side effects to guide the developer when
                  writing tests. We introduce a visualization called
                  Test Blueprint, through which we identify what the
                  required fixture is and what assertions are needed
                  to verify the correct behavior of a unit under test.
                  The dynamic analysis technique that underlies our
                  approach is based on both tracing method executions
                  and on tracking the flow of objects at runtime. To
                  demonstrate the usefulness of our approach we
                  present results from two case studies.},
  Annote       = {internationalconference},
  Author       = {Adrian Lienhard and Tudor G\^irba and Orla Greevy
                  and Oscar Nierstrasz},
  Booktitle    = {Proceedings of the 12th European Conference on
                  Software Maintenance and Reengineering (CSMR'08)},
  Doi	       = {10.1109/CSMR.2008.4493303},
  Keywords     = {girba scg08 scg-pub visualization object-flow
                  dynamic-analysis snf08 jb08},
  Medium       = {2},
  Pages	       = {83--92},
  Peerreview   = {yes},
  Publisher    = {IEEE Computer Society Press},
  Title	       = {Test Blueprints --- Exposing Side Effects in
                  Execution Traces to Support Writing Unit Tests},
  Url	       = {http://scg.unibe.ch/archive/papers/Lien08a-TestBlueprint.pdf},
  Year	       = {2008},
  Bdsk-Url-1   = {http://scg.unibe.ch/archive/papers/Lien08a-TestBlueprint.pdf},
  Bdsk-Url-2   = {http://dx.doi.org/10.1109/CSMR.2008.4493303}
}

@book{Mart02b,
  Author       = {Robert Cecil Martin},
  Isbn	       = {0-13-914556-7},
  Publisher    = {Prentice-Hall},
  Title	       = {Agile Software Development. Principles, Patterns,
                  and Practices},
  Year	       = {2002}
}

@book{Beck02a,
  Author       = {Kent Beck},
  Isbn	       = {978-0321146533},
  Keywords     = {olit patterns book scglib oorp},
  Publisher    = {Addison-Wesley Longman},
  Title	       = {Test Driven Development: By Example},
  Year	       = {2002}
}

@article{Fowl01a,
  Author       = {Fowler, Martin and Highsmith, Jim},
  journal      = {Software Development Magazine},
  number       = 8,
  Month	       = aug,
  url	       = {http://agilemanifesto.org},
  keywords     = {damiencbib},
  pages	       = {29--30},
  title	       = {The {Agile} Manifesto},
  volume       = 9,
  year	       = {2001}
}
@techreport{roy2007survey,
  title={A survey on software clone detection research},
  author={Roy, Chanchal Kumar and Cordy, James R},
  year={2007},
  institution={Citeseer}
}

@article{rattan2013software,
  title={Software clone detection: A systematic review},
  author={Rattan, Dhavleesh and Bhatia, Rajesh and Singh, Maninder},
  journal={Information and Software Technology},
  year={2013},
  publisher={Elsevier}
}
@article{Kosc13a,
  author  = {Rainer Koschke},
  note    = {accepted for publication},
  journal = {Journal of Software: Evolution and Process},
  year    = {2013},
  title   = {Large-scale inter-system clone detection using suffix trees and hashing}
}

@inproceedings{Horwi02a,
 author = {Horwitz, Susan},
 title = {Tool Support for Improving Test Coverage},
 booktitle = {Proceedings of the 11th European Symposium on Programming Languages and Systems},
 series = {ESOP '02},
 year = {2002},
 isbn = {3-540-43363-5},
 pages = {162--177},
 numpages = {16},
 url = {http://portal.acm.org/citation.cfm?id=645396.651959},
 acmid = {651959},
 publisher = {Springer-Verlag},
 address = {London, UK, UK}
}

@inproceedings{Mock09a,
 author = {Mockus, Audris and Nagappan, Nachiappan and Dinh-Trong, Trung T.},
 title = {Test coverage and post-verification defects: A multiple case study},
 booktitle = {Proceedings of the 2009 3rd International Symposium on Empirical Software Engineering and Measurement},
 series = {ESEM '09},
 year = {2009},
 isbn = {978-1-4244-4842-5},
 pages = {291--301},
 numpages = {11},
 doi = {10.1109/ESEM.2009.5315981},
 acmid = {1671276},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA}
}

@inproceedings{Piwo93a,
 author = {Piwowarski, Paul and Ohba, Mitsuru and Caruso, Joe},
 title = {Coverage measurement experience during function test},
 booktitle = {Proceedings of the 15th international conference on Software Engineering},
 series = {ICSE '93},
 year = {1993},
 isbn = {0-89791-588-7},
 location = {Baltimore, Maryland, United States},
 pages = {287--301},
 numpages = {15},
 url = {http://portal.acm.org/citation.cfm?id=257572.257635},
 acmid = {257635},
 publisher = {IEEE Computer Society Press},
 address = {Los Alamitos, CA, USA}
}

@book{van2001refactoring,
  title={Refactoring test code},
  author={van Deursen, Arie and Moonen, Leon and van den Bergh, Alex and Kok, Gerard},
  year={2001},
  publisher={CWI}
}

@article{Lanz03d,
  Abstract     = {Reverse engineering software systems has become a
                  major concern in software industry because of their
                  sheer size and complexity. This problem needs to be
                  tackled, since the systems in question are of
                  considerable worth to their owners an d maintainers.
                  In this article we present the concept of a
                  polymetric view, a lightweight software
                  visualization technique enriched with software
                  metrics information. Polymetric views help to
                  understand the structure and detect problems of a
                  software syst em in the initial phases of a reverse
                  engineering process. We discuss the benefits and
                  limits of several predefined polymetric views we
                  have implemented in our tool CodeCrawler. Moreover,
                  based on clusters of different polymetric views we
                  have developed a methodology which supports and
                  guides a software engineer in the first phases of a
                  reverse engineering of a large software system. We
                  have refined this methodology by repeatedly applying
                  it on industrial systems, and illustrate it by
                  applying a selection of polymetric views to a case
                  study.},
  Annote       = {internationaljournal},
  Author       = {Michele Lanza and St\'ephane Ducasse},
  Doi	       = {10.1109/TSE.2003.1232284},
  Journal      = {Transactions on Software Engineering (TSE)},
  Keywords     = {scg-pub jb04 recast04 stefPub moose-pub},
  Misc	       = {SCI impact factor 1.73},
  Month	       = sep,
  Number       = {9},
  Pages	       = {782--795},
  Publisher    = {IEEE Computer Society},
  Title	       = {Polymetric Views---A Lightweight Visual Approach to
                  Reverse Engineering},
  Url	       = {http://scg.unibe.ch/archive/papers/Lanz03dTSEPolymetric.pdf},
  Volume       = {29},
  Year	       = {2003},
  Bdsk-Url-1   = {http://scg.unibe.ch/archive/papers/Lanz03dTSEPolymetric.pdf},
  Bdsk-Url-2   = {http://dx.doi.org/10.1109/TSE.2003.1232284}
}

@inproceedings{Berg11d,
  Author = {Alexandre Bergel},
  Booktitle = {Proceedings of the 25th European Conference on Object-Oriented Programming (ECOOP'11)},
  Pages	       = {533--557},
  Publisher    = {Springer-Verlag},
  Series       = {LNCS},
  Title	       = {Counting Messages as a Proxy for Average Execution Time in Pharo},
  Month = jul,
  url = {http://bergel.eu/download/papers/Berg11c-compteur.pdf},
  Year = {2011}
}

@article{reichhart2007rule,
  title={Rule-based Assessment of Test Quality.},
  author={Reichhart, Stefan and G{\^\i}rba, Tudor and Ducasse, St{\'e}phane},
  journal={Journal of Object Technology},
  volume={6},
  number={9},
  pages={231--251},
  year={2007}
}

@article{gaelli2007composing,
  title={Composing Tests from Examples.},
  author={Gaelli, Markus and Wampfler, Rafael and Nierstrasz, Oscar},
  journal={Journal of Object Technology},
  volume={6},
  number={9},
  pages={71--86},
  year={2007}
}

@inproceedings{gaelli2005towards,
  title={Towards a taxonomy of unit tests},
  author={Gaelli, Markus and Lanza, Michele and Nierstrasz, Oscar},
  booktitle={Proceedings of the 13th International European Smalltalk Conference, Brussels, Belgium},
  year={2005},
  organization={Citeseer}
}

@phdthesis{gaelli2006modeling,
  title={Modeling Examples to Test and Understand Software},
  author={Gaelli, Markus},
  year={2006},
  school={Citeseer}
}

@inproceedings{gaelli2006composing,
  title={Composing unit tests},
  author={Gaelli, Markus and Greevy, Orla and Nierstrasz, Oscar},
  booktitle={2nd International Workshop on Software Product Line Testing},
  pages={16--22},
  year={2006},
  organization={Citeseer}
}

@inproceedings{yoo2009clustering,
  title={Clustering test cases to achieve effective and scalable prioritisation incorporating expert knowledge},
  author={Yoo, Shin and Harman, Mark and Tonella, Paolo and Susi, Angelo},
  booktitle={Proceedings of the eighteenth international symposium on Software testing and analysis},
  pages={201--212},
  year={2009},
  organization={ACM}
}

@article{sugiyama1981methods,
  title={Methods for visual understanding of hierarchical system structures},
  author={Sugiyama, Kozo and Tagawa, Shojiro and Toda, Mitsuhiko},
  journal={Systems, Man and Cybernetics, IEEE Transactions on},
  volume={11},
  number={2},
  pages={109--125},
  year={1981},
  publisher={IEEE}
}

@article{Berg11h,
  Author       = {Alexandre Bergel and Felipe Ba\~nados and Romain
                  Robbes and David R\"othlisberger},
  Journal      = {Journal of Computer Languages, Systems and
                  Structures},
  Title	       = {Spy: A flexible Code Profiling Framework},
  Year	       = {2011},
  volume = {38},
  number = {1},
  month = dec,
  doi = {10.1016/j.cl.2011.10.002},
  url = {http://bergel.eu/download/papers/Berg10f-Spy.pdf}
}

@article{defays1977efficient,
  title={An efficient algorithm for a complete link method},
  author={Defays, Daniel},
  journal={The Computer Journal},
  volume={20},
  number={4},
  pages={364--366},
  year={1977},
  publisher={Br Computer Soc}
}

@article{sibson1973slink,
  title={SLINK: an optimally efficient algorithm for the single-link cluster method},
  author={Sibson, Robin},
  journal={The Computer Journal},
  volume={16},
  number={1},
  pages={30--34},
  year={1973},
  publisher={Br Computer Soc}
}

@article{bergel2012increasing,
  title={Increasing test coverage with Hapao},
  author={Bergel, Alexandre and Pe{\~n}a, Vanessa},
  journal={Science of Computer Programming},
  year={2012},
  publisher={Elsevier}
}